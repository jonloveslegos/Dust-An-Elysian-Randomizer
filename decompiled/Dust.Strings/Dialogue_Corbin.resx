<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="006_000" xml:space="preserve">
    <value>You're my hero, Dust!</value>
  </data>
  <data name="005_060" xml:space="preserve">
    <value>Yeah, of course you do. C'mon, time to go.</value>
  </data>
  <data name="005_040" xml:space="preserve">
    <value>Oh, should you?</value>
  </data>
  <data name="005_050" xml:space="preserve">
    <value>Ha! I've gotten 1,000 hit combos! I get them all the time! Forever!</value>
  </data>
  <data name="005_020" xml:space="preserve">
    <value>Well, let's hope you never have to.</value>
  </data>
  <data name="005_030" xml:space="preserve">
    <value>Yeah, believe me, hitting 1,000 takes a while. I should know.</value>
  </data>
  <data name="005_000" xml:space="preserve">
    <value>Alright Corbin, I've managed a 1,000 hit combo.</value>
  </data>
  <data name="005_010" xml:space="preserve">
    <value>I knew you could it, Dust! Someday, I'm going to be just as powerful as you, and then I'll be able to get a 1,000 hit combo!</value>
  </data>
  <data name="004_000" xml:space="preserve">
    <value>I'd love it if you could do a 1,000 hit combo! That'd be so cool!</value>
  </data>
  <data name="003_000" xml:space="preserve">
    <value>Actually, I've already done that.</value>
  </data>
  <data name="002_000" xml:space="preserve">
    <value>A 1,000 hit combo? Sure, why not?</value>
  </data>
  <data name="002_020" xml:space="preserve">
    <value>Yeah, no, I'm not doing that. But I'll try to get the combo just for you.</value>
  </data>
  <data name="002_010" xml:space="preserve">
    <value>Oh wow, awesome! Hey, when you hit for the 1,000th time, you should say: "This one's for Corbin!"</value>
  </data>
  <data name="001_020" xml:space="preserve">
    <value>Okay, okay. Thanks again! You know, you're a pretty good fighter!</value>
  </data>
  <data name="001_030" xml:space="preserve">
    <value>Well, I...</value>
  </data>
  <data name="001_000" xml:space="preserve">
    <value>Oh, hello again! Thank you so much for helping me before!</value>
  </data>
  <data name="001_012" xml:space="preserve">
    <value>... Yes, Fidget. Like the laundry.</value>
  </data>
  <data name="001_010" xml:space="preserve">
    <value>You're welcome, Corbin. Just be a little smarter next time, alright? It's too dangerous out there for a kid like you. And don't worry about Gianni. I'll sort him out.</value>
  </data>
  <data name="001_011" xml:space="preserve">
    <value>Yeah, like the laundry!</value>
  </data>
  <data name="001_060" xml:space="preserve">
    <value>Fidget, calm down!</value>
  </data>
  <data name="001_070" xml:space="preserve">
    <value>Whoa! Do you really think you could do it?</value>
  </data>
  <data name="001_040" xml:space="preserve">
    <value>You're so strong, I'll bet you'd have no problem getting a 1,000 hit combo!</value>
  </data>
  <data name="001_050" xml:space="preserve">
    <value>Of course he wouldn't! He could do it in his sleep! Sleep combo!</value>
  </data>
  <data name="000_120" xml:space="preserve">
    <value>Oh wow, thanks! Here, take this. You'll need it if you go down there.</value>
  </data>
  <data name="000_130" xml:space="preserve">
    <value>A White Resonance Gem - that should come in handy, thank you. Now go on, hurry back to town.</value>
  </data>
  <data name="000_110" xml:space="preserve">
    <value>No, Corbin, you go home. I'll take care of it.</value>
  </data>
  <data name="000_160" xml:space="preserve">
    <value>Hmph. Well, I guess.</value>
  </data>
  <data name="000_140" xml:space="preserve">
    <value>Seriously? We're going after that jerk's laundry? We're going on a laundry quest?</value>
  </data>
  <data name="000_150" xml:space="preserve">
    <value>I wouldn't want Gianni blaming that poor kid for what's happened. C'mon, we'll kill some monsters on the way. It'll be great.</value>
  </data>
  <data name="000_020" xml:space="preserve">
    <value>I had to hide in here with all those monsters around!</value>
  </data>
  <data name="000_000" xml:space="preserve">
    <value>Hey, are you here to help me? Please tell me you're here to help me!</value>
  </data>
  <data name="000_030" xml:space="preserve">
    <value>Well, they're all gone, so you should be safe now. Are you hurt? Do you need help getting back home?</value>
  </data>
  <data name="000_060" xml:space="preserve">
    <value>I still need to get Mr. Gianni's laundry. I dropped it down there and don't want to get in trouble.</value>
  </data>
  <data name="000_010" xml:space="preserve">
    <value>Let me guess, you're Corbin. You know your sister's been looking everywhere for you?</value>
  </data>
  <data name="000_040" xml:space="preserve">
    <value>I'm okay, I think. I know how to get home by myself. I come here lots, but there were never any monsters!</value>
  </data>
  <data name="000_050" xml:space="preserve">
    <value>You'd better go while it's clear out there.</value>
  </data>
</root>